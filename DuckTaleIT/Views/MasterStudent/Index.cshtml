@model IEnumerable<DuckTaleIT.Models.StudentList>
@using Newtonsoft.Json;
@using Microsoft.EntityFrameworkCore;

@{
    ViewData["Title"] = "Students";
}

<h2>Student List</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form class="row" id="frnView">
    <div class="col-md-4">
        <input type="text" autocomplete="false" placeholder="Search" class="form-control" id="txtSearch" name="Query" value="@ViewBag.Query" />
        <input type="hidden" name="PageNo" value="1" />
    </div>
    <div class="col-md-4">
        <select class="form-control" name="filterBy">
            <option value="Name">Filter By First and Last Name</option>
            <option value="Class">Filter By Class</option>
            <option value="Subject">Filter By Subject</option>
        </select>

    </div>
    <div class="col-md-4">
        <button class="btn btn-success">View Filtered Data</button>
    </div>
</form>
</br>
<table class="table table-bordered" id="tblStudentList">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.masterStudent.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.masterStudent.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.masterStudent.masterClass)
            </th>
            <th>Subject</th>
            <th>Marks</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var SubjectList = item.subjectStudentWise.Include(s => s.masterSubject).ToList();
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.masterStudent.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.masterStudent.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.masterStudent.masterClass.mClassName)
                </td>
                <td>
                    @{
                        if (SubjectList.Count > 0)
                        {
                            <label id="SubjectName">@SubjectList[0].masterSubject.mSubjectName</label>
                        }
                    }

                </td>
                <td>
                    @{
                        if (SubjectList.Count > 0)
                        {
                            <label id="Marks">@SubjectList[0].sswStudentMarks</label>
                        }
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.masterStudent.StuId">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.masterStudent.StuId">Delete</a>
                    @*<input type="hidden" name="SubjectList" value="@JsonConvert.SerializeObject(SubjectList)" />*@
                </td>
            </tr>
            foreach (var item1 in SubjectList)
            {
                if (SubjectList.IndexOf(item1) > 0)
                {
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td><label id="SubjectName">@item1.masterSubject.mSubjectName</label></td>
                        <td><label id="Marks">@item1.sswStudentMarks</label></td>
                        <td></td>
                    </tr>
                }
            }
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="6">
                @for (var p = 1; p <= (int)ViewBag.pageCount; p++)
                {
                    <a href="@Url.Action("Index", new { PageNo = p,Query=ViewBag.Query,filterBy=ViewBag.filterBy })" class="btn btn-default">@p</a>
                }
            </td>
        </tr>
    </tfoot>
</table>
<script>
    $('select[name=filterBy]').on('change', function () {
        $('#frnView').submit();
    });
    $('select[name=filterBy]').val('@ViewBag.filterBy');
</script>